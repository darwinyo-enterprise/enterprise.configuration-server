// <auto-generated />
using Enterprise.ConfigurationServer.DataLayers.ConfigurationDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Enterprise.ConfigurationServer.Migrations
{
    [DbContext(typeof(ConfigurationDBContext))]
    [Migration("20180205150122_FixingDBStructures")]
    partial class FixingDBStructures
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Enterprise.ConfigurationServer.DataLayers.ConfigurationDB.ApplicationConfiguration", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("IntegratedAppID");

                    b.Property<string>("Key")
                        .IsRequired();

                    b.Property<string>("Values")
                        .IsRequired();

                    b.HasKey("ID");

                    b.HasIndex("IntegratedAppID");

                    b.ToTable("ApplicationConfiguration","Configuration");
                });

            modelBuilder.Entity("Enterprise.ConfigurationServer.DataLayers.ConfigurationDB.AppMenu", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AppMenuCategoryID");

                    b.Property<Guid?>("AppMenuLayoutID");

                    b.Property<Guid>("IntegratedAppID");

                    b.Property<string>("MenuHref")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("MenuIcon")
                        .HasMaxLength(100);

                    b.Property<int>("MenuNotification");

                    b.Property<string>("MenuTitle")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.HasIndex("AppMenuCategoryID");

                    b.HasIndex("AppMenuLayoutID");

                    b.HasIndex("IntegratedAppID");

                    b.ToTable("AppMenu","Configuration");
                });

            modelBuilder.Entity("Enterprise.ConfigurationServer.DataLayers.ConfigurationDB.AppMenuCategory", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AppMenuLayoutID");

                    b.Property<Guid>("IntegratedAppID");

                    b.Property<string>("MenuCategory")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.HasIndex("AppMenuLayoutID");

                    b.HasIndex("IntegratedAppID");

                    b.ToTable("AppMenuCategory","Configuration");
                });

            modelBuilder.Entity("Enterprise.ConfigurationServer.DataLayers.ConfigurationDB.AppMenuLayout", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("LayoutName")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("AppMenuLayout","Configuration");
                });

            modelBuilder.Entity("Enterprise.ConfigurationServer.DataLayers.ConfigurationDB.IntegratedApp", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ApplicationName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("ApplicationURL")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<bool>("CoreFeature");

                    b.Property<bool>("Integrated");

                    b.Property<Guid>("ProjectID");

                    b.HasKey("ID");

                    b.HasIndex("ApplicationName")
                        .IsUnique();

                    b.HasIndex("ApplicationURL")
                        .IsUnique();

                    b.HasIndex("ProjectID");

                    b.ToTable("IntegratedApp","Configuration");
                });

            modelBuilder.Entity("Enterprise.ConfigurationServer.DataLayers.ConfigurationDB.MenuPermittedRole", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AppMenuCategoryID");

                    b.Property<Guid?>("AppMenuID");

                    b.Property<Guid>("ApplicationRolesID");

                    b.HasKey("ID");

                    b.HasIndex("AppMenuCategoryID");

                    b.HasIndex("AppMenuID");

                    b.ToTable("MenuPermittedRole","Configuration");
                });

            modelBuilder.Entity("Enterprise.ConfigurationServer.DataLayers.ConfigurationDB.Project", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("ProjectVersion")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("ID");

                    b.ToTable("Project","Configuration");
                });

            modelBuilder.Entity("Enterprise.ConfigurationServer.DataLayers.ConfigurationDB.ApplicationConfiguration", b =>
                {
                    b.HasOne("Enterprise.ConfigurationServer.DataLayers.ConfigurationDB.IntegratedApp", "IntegratedApp")
                        .WithMany("ApplicationConfigurations")
                        .HasForeignKey("IntegratedAppID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Enterprise.ConfigurationServer.DataLayers.ConfigurationDB.AppMenu", b =>
                {
                    b.HasOne("Enterprise.ConfigurationServer.DataLayers.ConfigurationDB.AppMenuCategory", "AppMenuCategory")
                        .WithMany("AppMenus")
                        .HasForeignKey("AppMenuCategoryID");

                    b.HasOne("Enterprise.ConfigurationServer.DataLayers.ConfigurationDB.AppMenuLayout", "AppMenuLayout")
                        .WithMany("AppMenus")
                        .HasForeignKey("AppMenuLayoutID");

                    b.HasOne("Enterprise.ConfigurationServer.DataLayers.ConfigurationDB.IntegratedApp", "IntegratedApp")
                        .WithMany("AppMenus")
                        .HasForeignKey("IntegratedAppID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Enterprise.ConfigurationServer.DataLayers.ConfigurationDB.AppMenuCategory", b =>
                {
                    b.HasOne("Enterprise.ConfigurationServer.DataLayers.ConfigurationDB.AppMenuLayout", "AppMenuLayout")
                        .WithMany("AppMenuCategories")
                        .HasForeignKey("AppMenuLayoutID");

                    b.HasOne("Enterprise.ConfigurationServer.DataLayers.ConfigurationDB.IntegratedApp", "IntegratedApp")
                        .WithMany("AppMenuCategories")
                        .HasForeignKey("IntegratedAppID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Enterprise.ConfigurationServer.DataLayers.ConfigurationDB.IntegratedApp", b =>
                {
                    b.HasOne("Enterprise.ConfigurationServer.DataLayers.ConfigurationDB.Project", "Project")
                        .WithMany("IntegratedApps")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Enterprise.ConfigurationServer.DataLayers.ConfigurationDB.MenuPermittedRole", b =>
                {
                    b.HasOne("Enterprise.ConfigurationServer.DataLayers.ConfigurationDB.AppMenuCategory", "AppMenuCategory")
                        .WithMany("MenuPermittedRole")
                        .HasForeignKey("AppMenuCategoryID");

                    b.HasOne("Enterprise.ConfigurationServer.DataLayers.ConfigurationDB.AppMenu", "AppMenu")
                        .WithMany("MenuPermittedRoles")
                        .HasForeignKey("AppMenuID");
                });
#pragma warning restore 612, 618
        }
    }
}
